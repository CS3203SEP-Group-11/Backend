name: Notification Service CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'notification-service/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'notification-service/**'

env:
  SERVICE_NAME: notification-service
  DOCKER_IMAGE: levelup/notification-service
  GKE_CLUSTER: levelup-cluster
  GKE_ZONE: us-central1-a

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run tests
      working-directory: ${{ env.SERVICE_NAME }}
      run: mvn clean test

    - name: Build application
      working-directory: ${{ env.SERVICE_NAME }}
      run: mvn clean package -DskipTests

    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      working-directory: ${{ env.SERVICE_NAME }}
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
                     -t ${{ env.DOCKER_IMAGE }}:latest .
        docker push ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        docker push ${{ env.DOCKER_IMAGE }}:latest

    - name: Setup Google Cloud CLI
      if: github.ref == 'refs/heads/main'
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to GKE
      if: github.ref == 'refs/heads/main'
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}
        kubectl set image deployment/${{ env.SERVICE_NAME }} \
          ${{ env.SERVICE_NAME }}=${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
          --namespace=levelup-learning
        kubectl rollout status deployment/${{ env.SERVICE_NAME }} --namespace=levelup-learning